-- Lookup tables for common enums
CREATE TABLE roles (
    id INT PRIMARY KEY AUTO_INCREMENT,
    role_name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE duration_types (
    id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE status_types (
    id INT PRIMARY KEY AUTO_INCREMENT,
    status_name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE program_types (
    id INT PRIMARY KEY AUTO_INCREMENT,
    type_name VARCHAR(20) NOT NULL UNIQUE
);

-- Core user tables
CREATE TABLE users (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    role_id INT NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (role_id) REFERENCES roles(id)
);

CREATE TABLE personal_details (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL UNIQUE,
    first_name VARCHAR(50) NOT NULL,
    middle_name VARCHAR(50),
    last_name VARCHAR(50) NOT NULL,
    sex ENUM('Male', 'Female') NOT NULL,
    birthdate DATE NOT NULL,
    phone_number VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE profile_photos (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    photo_path VARCHAR(255) NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    uploaded_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

-- Coach related tables
CREATE TABLE coaches (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL UNIQUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

CREATE TABLE coach_program_types (
    coach_id INT NOT NULL,
    program_id INT NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (coach_id) REFERENCES coaches(id),
    FOREIGN KEY (program_id) REFERENCES programs(id)
);

-- Membership and Program tables
CREATE TABLE membership_plans (
    id INT PRIMARY KEY AUTO_INCREMENT,
    plan_name VARCHAR(100) NOT NULL,
    plan_type ENUM('standard', 'special', 'walk-in') NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    duration INT NOT NULL,
    duration_type_id INT NOT NULL,
    description TEXT,
    start_date DATE,
    end_date DATE,
    status_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (duration_type_id) REFERENCES duration_types(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);

CREATE TABLE programs (
    id INT PRIMARY KEY AUTO_INCREMENT,
    program_name VARCHAR(100) NOT NULL,
    program_type_id INT NOT NULL,
    duration INT NOT NULL,
    duration_type_id INT NOT NULL,
    description TEXT,
    status_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (program_type_id) REFERENCES program_types(id),
    FOREIGN KEY (duration_type_id) REFERENCES duration_types(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);

-- Rental Services
CREATE TABLE rental_services (
    id INT PRIMARY KEY AUTO_INCREMENT,
    service_name VARCHAR(100) NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    total_slots INT NOT NULL,
    available_slots INT NOT NULL,
    duration INT NOT NULL,
    duration_type_id INT NOT NULL,
    description TEXT,
    status_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (duration_type_id) REFERENCES duration_types(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);

-- Attendance tables
CREATE TABLE attendance_status (
    id INT PRIMARY KEY AUTO_INCREMENT,
    status_name VARCHAR(20) NOT NULL UNIQUE
);

CREATE TABLE attendance (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    date DATE NOT NULL,
    time_in TIME,
    time_out TIME,
    status_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id),
    FOREIGN KEY (status_id) REFERENCES attendance_status(id)
);

CREATE TABLE attendance_history (
    id INT PRIMARY KEY AUTO_INCREMENT,
    attendance_id INT NOT NULL,
    time_in TIME,
    time_out TIME,
    status_id INT,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (attendance_id) REFERENCES attendance(id),
    FOREIGN KEY (status_id) REFERENCES attendance_status(id)
);

-- Announcements
CREATE TABLE announcements (
    id INT PRIMARY KEY AUTO_INCREMENT,
    message TEXT NOT NULL,
    applied_date DATE NOT NULL,
    is_active BOOLEAN DEFAULT TRUE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Insert initial lookup data
INSERT INTO roles (role_name) VALUES 
('admin'), ('staff'), ('member'), ('coach');

INSERT INTO duration_types (type_name) VALUES 
('days'), ('months'), ('year');

INSERT INTO status_types (status_name) VALUES 
('active'), ('inactive');

INSERT INTO program_types (type_name) VALUES 
('personal'), ('group');

INSERT INTO attendance_status (status_name) VALUES 
('checked in'), ('checked out');

-- New
-- Memberships master table
CREATE TABLE memberships (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    membership_plan_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    total_amount DECIMAL(10,2) NOT NULL,
    status ENUM('active', 'expiring', 'expired') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES personal_details(id),
    FOREIGN KEY (membership_plan_id) REFERENCES membership_plans(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);


-- Table for program subscriptions
CREATE TABLE program_subscriptions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    membership_id INT NOT NULL,
    program_id INT NOT NULL,
    coach_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    status_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (membership_id) REFERENCES memberships(id),
    FOREIGN KEY (program_id) REFERENCES programs(id),
    FOREIGN KEY (coach_id) REFERENCES coaches(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);

-- Table for rental subscriptions
CREATE TABLE rental_subscriptions (
    id INT PRIMARY KEY AUTO_INCREMENT,
    membership_id INT NOT NULL,
    rental_service_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    price DECIMAL(10,2) NOT NULL,
    status_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (membership_id) REFERENCES memberships(id),
    FOREIGN KEY (rental_service_id) REFERENCES rental_services(id),
    FOREIGN KEY (status_id) REFERENCES status_types(id)
);